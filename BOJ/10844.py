# https://www.acmicpc.net/problem/10844

# 인접한 모든 자리의 차이가 1인 수를 계단수라고 한다.
# N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구해야 한다.
# 0으로 시작하는 수는 계단수가 아니다.
# 정답을 1,000,000,000로 나눈 나머지를 출력한다.

# DP를 이용한 풀이
# 1부터 9까지 순회하면서 개수를 구하고 각 수별로 다음수에 경우의수를 더해야할 듯.
# 길이가 1 이상이라면 첫 줄에는 모두 1로 채우고 시작
# 값이 0이나 9인 경우에는 경우의수가 추가되지 않고
# 값이 1~8인 경우엔 경우의수가 한가지 추가됨.

# 점화식
# 이전 값이 1~8인 경우 -> dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]
# 이전 값이 0이나 9인 경우 
# dp[i][0] = dp[i-1][1]
# dp[i][9] = dp[i-1][8]

N = int(input())

MOD = 1_000_000_000

if (N == 1):
	print(9)
	exit()

# dp 배열 초기화
dp = [[0] * 10 for _ in range(N+1)]

# 길이가 1인 계단 수 초기화
for j in range(1, 10):
    dp[1][j] = 1

# DP 테이블 채우기
for i in range(2, N+1):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][1] % MOD
        elif j == 9:
            dp[i][j] = dp[i-1][8] % MOD
        else:
            dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]) % MOD

# print(dp)
print(sum(dp[N]) % 1000000000)
